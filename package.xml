<?xml version="1.0" encoding="ISO-8859-1" ?>
<package version="1.0">
    <name>Phlickr</name>
    <summary>Access the Flickr API (PHP 5)</summary>
    <description>This package provides PHP5 access to the Flickr API.</description>
    <license>LGPL</license>
    <maintainers>
        <maintainer>
            <user>drewish</user>
            <name>Andrew Morton</name>
            <email>drewish@katherinehouse.com</email>
            <role>lead</role>
        </maintainer>
    </maintainers>
    <release>
        <version>0.2.7</version>
        <date>2005-11-26</date>
        <state>stable</state>
        <notes>Fixed stuff
-----------
* Fixed a bug in Tools/GetToken.php saving the auth info.
* Removed some byref returning wankyness from Phlickr_Api.
* Phlickr_Uploader::uploader() now uses a signed URL.
* Phlickr_Photo::saveAs() now uses CURL for the downloads which is much faster than PHP's fopen.
* Removed trailing ?>'s from tests.
        </notes>
        <deps>
            <dep type="php" rel="ge" version="5.0" />
            <dep type="ext" rel="has" optional="yes">curl</dep>
            <dep type="ext" rel="has" optional="yes">gd</dep>
            <dep type="ext" rel="has" optional="yes">SimpleXML</dep>
            <dep type="pkg" rel="ge" version="2.2.0" optional="yes">PHPUnit2</dep>
        </deps>
        <filelist>
            <dir name="/" baseinstalldir="Phlickr" >
             <dir name="Framework">
              <file name="IList.php" role="php" />
              <file name="IPhotoList.php" role="php" />
              <file name="IPhotoSortStrategy.php" role="php" />
              <file name="IUploadBatch.php" role="php" />
              <file name="IUploadListener.php" role="php" />
              <file name="ListBase.php" role="php" />
              <file name="ObjectBase.php" role="php" />
             </dir> <!-- /Framework -->
             <dir name="Import">
              <file name="Gallery.php" role="php" />
              <file name="Makethumbs.php" role="php" />
             </dir> <!-- /Import -->
             <dir name="PhotoSortStrategy">
              <file name="ByColor.php" role="php" />
              <file name="ById.php" role="php" />
              <file name="ByTakenDate.php" role="php" />
              <file name="ByTitle.php" role="php" />
             </dir> <!-- /PhotoSortStrategy -->
             <dir name="Tests">
              <file name="AllTests.php" role="test" />
              <file name="constants.inc" role="test" />
              <file name="small_sample.gif" role="test" />
              <file name="small_sample.JPG" role="test" />
              <file name="small_sample.png" role="test" />
             </dir> <!-- /Tests -->
             <dir name="Tests/Mocks">
              <file name="PhotoListRequest.php" role="test" />
              <file name="Request.php" role="test" />
             </dir> <!-- /Tests/Mocks -->
             <dir name="Tests/Offline">
              <file name="AllTests.php" role="test" />
              <file name="Api.php" role="test" />
              <file name="AuthedGroup.php" role="test" />
              <file name="AuthedPhoto.php" role="test" />
              <file name="AuthedPhotoset.php" role="test" />
              <file name="AuthedPhotosetList.php" role="test" />
              <file name="AuthedUser.php" role="test" />
              <file name="Cache.php" role="test" />
              <file name="Group.php" role="test" />
              <file name="GroupList.php" role="test" />
              <file name="Photo.php" role="test" />
              <file name="PhotoList.php" role="test" />
              <file name="PhotoListIterator.php" role="test" />
              <file name="Photoset.php" role="test" />
              <file name="PhotosetList.php" role="test" />
              <file name="PhotosetPhotoList.php" role="test" />
              <file name="PhotoSorter.php" role="test" />
              <file name="Request.php" role="test" />
              <file name="Response.php" role="test" />
              <file name="Uploader.php" role="test" />
              <file name="User.php" role="test" />
              <file name="UserList.php" role="test" />
             </dir> <!-- /Tests/Offline -->
             <dir name="Tests/Offline/Import">
              <file name="AllTests.php" role="test" />
              <file name="Gallery.php" role="test" />
              <file name="Makethumbs.php" role="test" />
             </dir> <!-- /Tests/Offline/Import -->
             <dir name="Tests/Offline/PhotoSortStrategy">
              <file name="AllTests.php" role="test" />
              <file name="ByColor.php" role="test" />
              <file name="ById.php" role="test" />
              <file name="ByTakenDate.php" role="test" />
              <file name="ByTitle.php" role="test" />
             </dir> <!-- /Tests/Offline/PhotoSortStrategy -->
             <dir name="Tests/Offline/TextUi">
              <file name="AllTests.php" role="test" />
              <file name="UploadBatchViewer.php" role="test" />
              <file name="UploadListener.php" role="test" />
             </dir> <!-- /Tests/Offline/TextUi -->
             <dir name="Tests/Online">
              <file name="AllTests.php" role="test" />
              <file name="Api.php" role="test" />
              <file name="AuthedGroup.php" role="test" />
              <file name="AuthedPhoto.php" role="test" />
              <file name="AuthedPhotoset.php" role="test" />
              <file name="AuthedPhotosetList.php" role="test" />
              <file name="AuthedUser.php" role="test" />
              <file name="Group.php" role="test" />
              <file name="Photo.php" role="test" />
              <file name="PhotoList.php" role="test" />
              <file name="Photoset.php" role="test" />
              <file name="PhotosetList.php" role="test" />
              <file name="Request.php" role="test" />
              <file name="Uploader.php" role="test" />
              <file name="User.php" role="test" />
             </dir> <!-- /Tests/Online -->
             <dir name="TextUi">
              <file name="UploadBatchViewer.php" role="php" />
              <file name="UploadListener.php" role="php" />
             </dir> <!-- /TextUi -->
             <file name="Api.php" role="php" />
             <file name="AuthedGroup.php" role="php" />
             <file name="AuthedPhoto.php" role="php" />
             <file name="AuthedPhotoset.php" role="php" />
             <file name="AuthedPhotosetList.php" role="php" />
             <file name="AuthedUser.php" role="php" />
             <file name="Cache.php" role="php" />
             <file name="Exception.php" role="php" />
             <file name="Group.php" role="php" />
             <file name="GroupList.php" role="php" />
             <file name="Photo.php" role="php" />
             <file name="PhotoList.php" role="php" />
             <file name="PhotoListIterator.php" role="php" />
             <file name="Photoset.php" role="php" />
             <file name="PhotosetList.php" role="php" />
             <file name="PhotosetPhotoList.php" role="php" />
             <file name="PhotoSorter.php" role="php" />
             <file name="Request.php" role="php" />
             <file name="Response.php" role="php" />
             <file name="Uploader.php" role="php" />
             <file name="User.php" role="php" />
             <file name="UserList.php" role="php" />
            </dir> <!-- / -->
        </filelist>
    </release>
    <changelog>
        <release>
            <version>0.2.6</version>
            <date>2005-02-05</date>
            <state>beta</state>
            <notes>New stuff (and backwards compatibility breaks)
---------
* BC: Phlickr_PhotoList now returns Phlickr_AuthedPhoto objects if the current
  user is the photo's owner.
* BC: Phlickr_AuthedPhotosetList::create() now returns a photoset id rather than
  an object. Flickr's been getting slower so it takes a few seconds for the set
  to be created. Now the caller can add the appropriate calls to sleep() before
  creating the Phlickr_AuthedPhotoset object.

* Added Phlickr_Group::buildDiscussFeedUrl() and buildPhotoFeedUrl() to provide
  URLs to a groups photos and discussions.
* Added Phlickr_User::buildCommentsByFeedUrl() and buildCommentsOnFeedUrl() to
  provide URLs to a comments made by a users and on a user's photos.
* Added Phlickr_AuthedPhoto::delete() to delete photos.
* Added Phlickr_User::getTags() and getPopularTags() to grab a user's tags.
* Fixed a big bug in the Phlickr_PhotoSorter that caused photos to be dropped
  if more than one had the same comparison key.
* Several improvements in Phlickr_PhotoSortStrategy_ByColor.

Fixed stuff
-----------
* Fixed: Photosets now use string ids.
* Fixed: Lots of documentation was specifying integer ids, instead of strings.
            </notes>
        </release>
        <release>
            <version>0.2.5</version>
            <date>2005-09-02</date>
            <state>beta</state>
            <notes>New stuff (and backwards compatibility breaks)
---------
* BC BREAK: Phlickr_Uploader::upload() returns a photo id now
  instead of a photo object. The change was made because
  Flickr's servers have been getting slower on uploads causing
  exceptions when the new photo couldn't be found.
* BC BREAK: Ids are now strings, not integers. Flickr has stated
  that the format will be changing at some point in the future.
* Added Phlickr_PhotoSortStrategy_ByTakenDate to sort by a
  photo's taken date.
* Phlickr_Uploader::upload() now accepts tags as a string or as
  an array.
* Added Phlickr_Uploader::uploadBatch() to allow multiple
  photos to be uploaded
  and then added to photoset. I think it's pretty neat.
* Added Phlickr_Framework_IUploadBatch and
  Phlickr_Framework_IUploadListener. They're used by
  Phlickr_Uploader::uploadBatch().
* Added Phlickr_Import_Makethumbs, it implements
  Phlickr_Framework_IUploadBatch, to import galleries created
  by Rob Molenda's makethumb.sh script.
* Added Phlickr_Import_Gallery, it implements
  Phlickr_Framework_IUploadBatch, to import Gallery
  (http://gallery.sf.net) albums.
* Added Phlickr_TextUi_UploadBatchViewer to display the contents
  of Phlickr_Framework_IUploadBatch objects.

Fixed stuff
-----------
* Updated Phlickr_Photo::buildImgUrl() to use Flickr's new URL
  styles.
* Phlickr_Request::submitHttpPost() now takes an argument to
  specify the timeout. This change was made so uploads of long
  files can go for a long time and other, failed, requests can
  fail sooner.
* Phlickr_Uploader::upload() works better. It also waits longer
  for uploads now.
* Finally got the package working with both versions of the PEAR
  package.xml file.
* Changed Phlickr_AuthedPhoto::setTaken() to make the
  $granularity parameter optional.
            </notes>
        </release>
        <release>
            <version>0.2.4</version>
            <date>2005-08-26</date>
            <state>beta</state>
            <notes>Broken backwards compatibility
-----------------------------
* Reworked most of the photo sorting. Phlickr_PhotoSorter uses a
  Phlickr_Framework_IPhotoSortStrategy instead of the
  Phlickr_Framework_IPhotoComparator. The implementations have been
  moved from Phlickr/PhotoComparators to Phlickr/PhotoSortStrategy
  which is longer but more descriptive.

New stuff
---------
* Added Phlickr_Api::saveAs() and Phlickr_Api::createFrom() methods
  to allow the Api settings to be saved and loaded.
* Added Phlickr_Api::getCacheFilename() and setCacheFilename() to
  simplify the loading and saving of the cached data to a file. When
  Phlickr_Api::__destruct() is called the cache is saved to the
  file.
* Added getXml() to most wrapper objects (Phlickr_Photo,
  Phlickr_AuthedUser, etc).
* Added getRawTags() to Phlickr_Photo.

Misc Stuff
----------
* Added getRequestMethodName() and getRequestMethodParams() to
  Phlickr_Photoset and Phlickr_PhotosetList.
            </notes>
        </release>
        <release>
            <version>0.2.3</version>
            <date>2005-07-18</date>
            <state>devel</state>
            <notes>New Authentication (Big break in backwards compatibility)
* Made a bunch of big changes to Phlickr_Api and Phlickr_Request
  to implement the new Flickr authentication mechanism. It's a
  pain in the ass to use but we'll all suffer together.
* Renamed Phlickr_Api::isValidAuth() to isAuthValid().
* Phlickr_Api::__construct() takes very different parameters

New stuff:
Caching
* Changed Phlickr_Cache to add support for expiring items from
  the cache.
* Added $allowCached parameter to Phlickr_Api::executeMethod().

Photo
* Added getSizes() to Phlickr_Photo.
* Changed Phlickr_Photo::buildImgUrl() to use getSizes() to find
  the proper file type when building URLs to the original image.

PhotoListIterator
* Phlickr_PhotoListIterator now implements
  Phlickr_Framework_IPhotoList effectively "flattening" a paged
  photo list.
* Added Phlickr_PhotoListIterator::getCount(), getIds(), and
  getPhotos() which pull the number of photos on all the pages,
  the photo ids from all the pages, and the photos from all the
  pages respectively.
* Renamed Phlickr_PhotoList::getPhotosForPage() to
  getPhotosFromPage(). The function wasn't really a "public"
  function so it shouldn't cause too many problems.
* Added Phlickr_PhotoList::getIdsFromPage().
* Removed the static from Phlickr_PhotoList::requestXml() and
  reworked some of the parameters.

Photo Sorting
* Created Phlickr_Framework_IPhotoComparator interface.
* Created Phlickr_PhotoSorter to sort photos using a
  Phlickr_Framework_IPhotoComparator.
* Created Phlickr_Comparators_PhotoById to sort photos by their
  id (which should be the same as upload order).
* Created Phlickr_Comparators_PhotoByTitle to sort photos by
  their title.
* Created Phlickr_Comparators_PhotoByColor to sort photos by
  their color. It works well enough to be interesting.

Misc
* Added getRequestMethodName() and getRequestMethodParams() to
  Phlickr_Photoset and Phlickr_PhotosetList.

As always, I've continued to make improvements in the
documentation.
            </notes>
        </release>
        <release>
            <version>0.2.2</version>
            <date>2005-07-03</date>
            <state>devel</state>
            <notes>New stuff:
* Added Phlickr_AuthedPhoto->setTaken() and setPosted().
* Added Phlickr_Photo->getTakenDate() and getPostedDate() to
  return a formated date string.
* Making some changed to the way Phlickr_Uploader works. I'm
  trying to remove the number of parameters to Upload(). Added
  setPerms() to assign and isForPublic(), isForFriends(), and
  isForFamily() to view the permissions assigned to each photo
  uploaded. Added setTags() and getTags() to specify tags that
  should be added to each and every photo. Any tags passed into
  upload() will be appended to the end of getTags()'s list.
* Added Phlickr_Photo::isForPublic(), isForFriends(), and
  isForFamily() to allow you to check the visibility of photos.
* Started adding @since tags to the PHPDoc comments.
* Added an optional dependency for the GD library. I'm planning
  some stuff that sorts by color.

Bug fixes:
* Phlickr_AuthedPhotosetList->create() was returning a
  Phlickr_Photoset instead of an Phlickr_AuthedPhotoset.

As always, I've continued to make improvements in the
documentation.
            </notes>
        </release>
        <release>
            <version>0.2.1</version>
            <date>2005-06-19</date>
            <state>devel</state>
            <notes>Broke some backwards compatibility:
* Forked the modifiers in Phlickr_Photo to
  Phlickr_AuthedPhoto.
* Renamed Phlickr_Photoset and Phlickr_AuthedPhotoset's
  getOwnerId() method to getUserId().
* Renamed Phlickr_Photo and Phlickr_AuthedPhoto's getOwnerId()
  to method to getUserId().

New stuff:
* Added getPostedTimestamp(), getTakenGranularity() and
    getTakenTimestamp() to Phlickr_Photo to allow access to a
    photo's dates.
* Added getRealname() to Phlickr_User.
* Created Phlickr_UserList class.
* Created Phlickr_AuthedGroup class and added add() and remove()
    methods.
* Added getContactUserList() to Phlickr_User and
  Phlickr_AuthedUser.
* Modified Phlickr_User->getGroupList() to return
  private groups.
* Added the saveAs() and loadFrom() methods to the Phlickr_Cache
  class to simplify the process of saving cached data between
  sessions.

Internal changes:
* Added code to Phlickr_GroupList to work Flickr's inconsistent
  naming of id fields in the group lists.
* Refactored some of the XML element name passing internals.
            </notes>
        </release>
        <release>
            <version>0.2.0</version>
            <date>2005-05-28</date>
            <state>devel</state>
            <notes>
* Forked the modifiers in Phlickr_Photoset to
  Phlickr_AuthedPhotoset. This breaks backwards compatibility.
* Added saveAs() to Phlickr_Photo.
* Continued work on improving documentation.
* Added a bunch of files that had been missing from the package.
            </notes>
        </release>
        <release>
            <version>0.1.9</version>
            <date>2005-05-25</date>
            <state>devel</state>
            <notes>
* Forked the modifiers in Phlickr_PhotosetList to
  Phlickr_AuthedPhotosetList. This breaks backwards
  compatibility.
* Added getPhotoCount() to Phlickr_Photoset.
* Continued work on improving documentation.
* Modified Phlickr_Request in response to Flickr's new
  requirement that all setter requests be POSTed.
            </notes>
        </release>
        <release>
            <version>0.1.8</version>
            <date>2005-05-16</date>
            <state>devel</state>
            <notes>
* Worked on fixing a page switching bug in Phlickr_PhotoList.
* Fixed a bug in Phlickr_Photo::buildImgUrl(). I didn't
  understand that the '-' in the Flickr API indicated a null.
* Added Phlickr_Photo::SIZE_* constants to specify the image
  size for Phlickr_Photo::buildImgUrl().
* Refactored Phlickr_PhotoList to remove the inheritance of
  Phlickr_Framework_ListBase and open it up for an iterator.
* Extracted an interface (Phlickr_Framework_IList) from
  Phlickr_Framework_ListBase. All lists now implement it.
* Created the Phlickr_PhotoListIterator class. It makes it much
  easier to deal with the photo lists.
* Added Phlickr_Group::findbyUrl() to instantiate a group based
  on its URL.
* Continued work on improving documentation.
            </notes>
        </release>
        <release>
            <version>0.1.7</version>
            <date>2005-05-07</date>
            <state>devel</state>
            <notes>
* Added addFavorite() and removeFavorite() to Phlickr_AuthedUser
  class.
* Worked on improving caching in Phlickr_PhotoList.
* Modified Phlickr_Photoset->editPhotos() to return a
  Phlickr_PhotosetPhotoList instead of void.
* Added findByUsername(), findByEmail(), and findByUrl() methods
  to the Phlickr_User class.
* Added Phlickr_PhotoList->getRandomPhoto().
* Worked on improving the PHPDoc comments. Starting to add
  examples.
            </notes>
        </release>
        <release>
            <version>0.1.6</version>
            <date>2005-04-25</date>
            <state>devel</state>
            <notes>
* Added Phlickr_AuthedUser class.
* Added request caching with Phlickr_Cache.
* Modified most classes to make use of the caching.
* Added Phlickr_PhotosetPhotoList->getRandomPhoto().
* Modified unit tests to use cached results instead of the
  Phlickr_Tests_Mocks_Api class.
            </notes>
        </release>
        <release>
            <version>0.1.5</version>
            <date>2005-03-27</date>
            <state>devel</state>
            <notes>
* Added Phlickr_Group->getPhotoList().
* Added Phlickr_PhotoList->getPageCount().
* Fixed a bug in the Phlickr_Group that prevented it from
  loading a group.
            </notes>
        </release>
        <release>
            <version>0.1.4</version>
            <date>2005-03-23</date>
            <state>devel</state>
            <notes>
* Added the Group and GroupList objects.
* Refactored a bunch of stuff up into the ObjectBase and
  ListBase classes.
            </notes>
        </release>
        <release>
            <version>0.1.3</version>
            <date>2005-03-19</date>
            <state>devel</state>
            <notes>
* Added User->getFavoritePhotoList() and User->getPhotoList().
* PhotosetList now requires a User Id.
            </notes>
        </release>
        <release>
            <version>0.1.2</version>
            <date>2005-03-16</date>
            <state>devel</state>
            <notes>
* Created a Framework directory for abstract classes and
  interfaces. Move files into it and updated names.
* Added PHPUnit2 tests to the package.
            </notes>
        </release>
        <release>
            <version>0.1.1</version>
            <date>2005-03-16</date>
            <state>devel</state>
            <notes>
* Fixed bugs in Phlickr_PhotoList.
* Created Phlickr_PhotosetPhotoList.
* Finished implementing Phlickr_Photoset.
            </notes>
        <release>
            <version>0.1.0</version>
            <date>2005-03-09</date>
            <state>devel</state>
            <notes>
First public release.

Features that are "finished":
* Synchronous photo uploads.
* API Requests and Responses.
* Objects to wrap users, photos, photosets and photo lists.
            </notes>
        </release>
        </release>
    </changelog>
</package>
